services:
  postgres:
    image: postgres:16-alpine
    container_name: midnight-technician-postgres
    environment:
      POSTGRES_DB: glabtech_db
      POSTGRES_USER: ${POSTGRES_USER:-GLABTECH_APP}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-GLABTECH_APP_PASSWORD}
    ports:
      - "5464:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongodb/mongodb-community-server:latest
    container_name: mongo-technician
    ports:
      - "27042:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-M_T_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-M_T_PASSWORD}
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [
        "CMD-SHELL",
        "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin | grep 1 >/dev/null || exit 1"
      ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "timeout 2 bash -c '</dev/tcp/localhost/2181' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - kafka-data:/var/lib/kafka/data

volumes:
  mongo_data:
  postgres_data:
    driver: local
  kafka-data:
  zookeeper-data:
  zookeeper-logs:
